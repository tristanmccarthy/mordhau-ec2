---
- hosts: local
  connection: local
  gather_facts: no
  vars:
    instance_type: t3.small
    security_group: gameservers_sg
    image: ami-0009a33f033d8b7b6
    region: eu-west-2
    count: 1
  vars_files:
    - secrets.yml
  tasks:
    - name: Create a security group
      ec2_group:
        name: "{{ security_group }}"
        description: The gameservers security group
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: udp
            from_port: 7777
            to_port: 7777
            cidr_ip: 0.0.0.0/0
          - proto: udp
            from_port: 27015
            to_port: 27015
            cidr_ip: 0.0.0.0/0
          - proto: udp
            from_port: 15000
            to_port: 15000
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
    - name: Launch the new EC2 Instance
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true 
        region: "{{ region }}"
        key_name: "{{ key_name }}"
        count: "{{count}}"
      register: ec2
    - name: Add the newly created instance to host group
      add_host:
        name: "{{ item.public_ip }}"
        groups: gameservers
      with_items: "{{ ec2.instances }}"
    - name: Add tag to Instance(s)
      ec2_tag:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        resource: "{{ item.id }}" 
        region: "{{ region }}" 
        state: "present"
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Type: gameserver
    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22 
        state: started 
      with_items: "{{ ec2.instances }}"
- hosts: gameservers
  remote_user: ec2-user
  become: yes
  become_method: sudo 
  gather_facts: no
  vars_files:
    - secrets.yml
  pre_tasks:
    - name: Install Python
      yum:
        name: python
        state: latest
  tasks:
    - name: Create steam user
      user:
        name: steam
        system: yes
        state: present
        createhome: yes
        home: /home/steam
    - name: Install SteamCMD prerequisites
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - glibc.i686
        - libstdc++.i686
    - name: Install Mordhau prerequisites
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - pango.i686
        - fontconfig.i686
        - glibc.i686
        - libstdc++.i686
        - nss.i686
        - GConf2.i686
        - libXi.i686
        - libXcursor.i686
        - libXScrnSaver.i686
        - libXcomposite.i686
        - alsa-lib.i686
        - libXdamage.i686
        - libXtst.i686
        - atk.i686 
        - libXrandr.i686
    - block:  
      - name: Unpack SteamCMD archive
        unarchive: 
          src: https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz
          dest: ~/
          remote_src: yes
          validate_certs: no
      - name: Add Mordhau installation file
        copy:
          src: update_mordhau.txt
          dest: ~/update_mordhau.txt
          owner: steam
          group: steam
          mode: 0664
      - name: Install Mordhau dedicated server
        shell: /home/steam/steamcmd.sh +login anonymous +runscript update_mordhau.txt
      - name: Create Mordhau config folders if not present
        file:
          path: "{{ item }}"
          state: directory
          owner: steam
          group: steam
          mode: 0775
        with_items:
          - ~/mordhau/Mordhau/Saved/Config/LinuxServer
      - name: Add customised game ini file
        copy:
          src: Game.ini
          dest: ~/mordhau/Mordhau/Saved/Config/LinuxServer/Game.ini
          owner: steam
          group: steam
          mode: 0664     
      become: true
      become_user: steam
      become_method: sudo
    - name: Add Mordhau systemd file
      copy:
        src: MordhauServer.service 
        dest: /etc/systemd/system/MordhauServer.service          
        owner: root
        group: root
        mode: 0664
    - name: Start Mordhau server
      systemd:
        state: started
        name: MordhauServer 
